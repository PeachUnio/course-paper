import json
from unittest.mock import patch

import pytest

from src.services import just_search


@pytest.fixture
def test_data():
    return [
        {
            "Дата платежа": "16.07.2021",
            "Номер карты": "*7197",
            "Сумма операции": -50.9,
            "Категория": "Красота",
            "Описание": "Улыбка радуги",
        },
        {
            "Дата платежа": "28.12.2021",
            "Номер карты": "*5091",
            "Сумма операции": -348.7,
            "Категория": "Каршеринг",
            "Описание": "Ситидрайв",
        },
        {
            "Дата платежа": "24.12.2021",
            "Номер карты": "*7197",
            "Сумма операции": 20000.00,
            "Категория": "Другое",
            "Описание": "Иван Д.",
        },
        {
            "Дата платежа": "10.06.2021",
            "Номер карты": "*7197",
            "Сумма операции": -776.9,
            "Категория": "Красота",
            "Описание": "Подружка",
        },
        {
            "Дата платежа": "18.01.2018",
            "Номер карты": "*8533",
            "Сумма операции": -210.0,
            "Категория": "Фастфуд",
            "Описание": "Бургеркинг",
        },
        {
            "Дата платежа": "20.01.2018",
            "Номер карты": "*7197",
            "Сумма операции": -124.9,
            "Категория": "Красота",
            "Описание": "Улыбка радуги",
        },
    ]


def test_just_search(test_data):
    with patch("builtins.input", return_value="красота"):
        result = just_search(test_data, 766584467197)
        result_data = json.loads(result)

        assert all(t["Категория"].lower() == "красота" for t in result_data)
        assert all(t["Номер карты"] == "*7197" for t in result_data)


def test_just_search_not_found(test_data):
    with patch("builtins.input", return_value="нет"):
        result = just_search(test_data, 766584467197)

        assert result == "Данных по вашему запросу не найдено"
